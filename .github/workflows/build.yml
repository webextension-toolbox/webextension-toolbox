# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    uses: ./.github/workflows/lint.yml
  build:
    runs-on: ${{ matrix.os }}
    needs: [tests]
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x]
        vendor: [chrome, edge, safari, firefox, opera]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout Toolbox
        uses: actions/checkout@v4
        with:
          path: 'toolbox'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            ./toolbox/package-lock.json
            ./js-extension-template/package-lock.json
      - name: Install Toolbox dependencies
        run: npm ci
        working-directory: ./toolbox
      - name: Build Toolbox binary
        run: npm run build
        working-directory: ./toolbox
      - name: Checkout JS Extension Template
        uses: actions/checkout@v4
        with:
          repository: webextension-toolbox/js-extension-template
          ref: refs/heads/main
          path: 'js-extension-template'
      - name: Install JS Extension Template dependencies
        run: npm install
        working-directory: ./js-extension-template
      - name: Link toolbox into JS Extension Template on unix
        if: ${{ matrix.os != 'windows-latest' }}
        run: npx link $GITHUB_WORKSPACE/toolbox
        working-directory: ./js-extension-template
      - name: Link toolbox into JS Extension Template on windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: npx link $env:GITHUB_WORKSPACE/toolbox
        working-directory: ./js-extension-template
      - name: Build JS Extension Template for ${{ matrix.vendor }}
        run: npm run build ${{ matrix.vendor }}
        working-directory: ./js-extension-template
      - name: Read metadata on unix
        working-directory: ./js-extension-template
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
            echo "NAME=$(node -p -e "require('./package.json').name")" >> $GITHUB_ENV
            echo "VERSION=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV
      - name: Read metadata on windows
        working-directory: ./js-extension-template
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
            echo "NAME=$(node -p -e "require('./package.json').name")" >> $env:GITHUB_ENV
            echo "VERSION=$(node -p -e "require('./package.json').version")" >> $env:GITHUB_ENV
      - name: "Check package existence"
        uses: andstor/file-existence-action@v2
        with:
          files: "./js-extension-template/packages/${{ env.NAME }}.v${{ env.VERSION }}.${{ matrix.vendor }}.*"
          fail: true
